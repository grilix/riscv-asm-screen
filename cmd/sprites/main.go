package main

import (
	"fmt"
	"os"
	"image"
	"log"
	_ "image/png"

)

const (
	fileName = "sprites.png"
	spriteSize = 7
)

func main() {
	file, err := os.Open(fileName)
	if err != nil {
		log.Fatal("Error: Can't open file.")
		return
	}
	defer file.Close()
	img, format, err := image.Decode(file)
	if err != nil {
		log.Println("Error: Can't decode file:", err)
		return
	}

	fmt.Println("# vim: ft=riscv commentstring=#%s")
	fmt.Printf("\n# Autogenerated file, use 'make sprites' to regenerate.\n")
	fmt.Printf("# Source file [%s]: %s\n\n", format, fileName)
	fmt.Println(".global D_spritesheet")
	fmt.Println(".section .rodata")

	fmt.Println("D_spritesheet:")
	for sprite := 0; sprite <= 9; sprite++ {
		fmt.Printf("  .word %d\n", spriteSize)
		for segment := 0; segment < spriteSize; segment++ {
			result := 0
			for i := 0; i <= 7; i++ {
				color := img.At((spriteSize*sprite)+segment, i)
				r, g, b, _ := color.RGBA()

				pixel := (r+g+b) > (0xffff / 2)
				if pixel {
					result |= (1 << i)
				}
			}
			fmt.Printf("  .word 0b%08b\n", result)
		}
	}
}
